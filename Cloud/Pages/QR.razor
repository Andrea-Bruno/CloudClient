@page "/"
@inject NavigationManager NavigationManager
@using QRCoder;
<PageTitle>Connect a device</PageTitle>
<h1>Connect a device</h1>
@{
    var loggedQr = Static.LoggedQr;
    var qr = loggedQr ?? Static.QrDetected;
    if (qr != null)
    {
        if (qr == "")
        {
            StartDetect();
            <div class="alert alert-danger" role="alert">
                Your cloud box is not connected to the internet!<br />
                An internet connection is required so that the Cloud is always reachable.
            </div>
        }
    else
    {
        QRCodeGenerator qrGenerator = new QRCodeGenerator();
        QRCodeData qrCodeData = qrGenerator.CreateQrCode(qr, QRCodeGenerator.ECCLevel.Q);
        AsciiQRCode qrCode = new AsciiQRCode(qrCodeData);
        string qrCodeAsAsciiArt = qrCode.GetGraphic(1);
        <pre style="font-size:small; line-height: initial">
            @qrCodeAsAsciiArt
        </pre>
        <h3>Use the QR code to connect another device to the cloud: The PIN set on the cloud is required to connect.</h3>
        if (loggedQr == null)
        {
            <div class="alert alert-info" role="alert">
                This device is not connected to the cloud: <a href="login">Connect using the cloud pin</a>
            </div>
        }
    }
}
    else
    {
        StartDetect();
<h3>Connect your device to the cloud to view the QR code here</h3>
        if (Static.QrDetected == null)
        {
<div class="alert alert-warning" role="alert">
    Connect your computer to the same intranet as the Cloud to receive the QR code.
</div>
        }
    }
}
@functions {
    void StartDetect()
    {
        Static.DetectQrCode((qr) =>
        {
            InvokeAsync(StateHasChanged);
        });
    }
}
